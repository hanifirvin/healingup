classDiagram
    %% Base Classes
    class FirestoreRecord {
        +DocumentReference reference
        +Map<String, dynamic> data
        +getDocument()*
        +getDocumentOnce()*
        +fromSnapshot()*
    }

    class StatefulWidget {
        +createState()*
    }

    class State {
        +initState()
        +dispose()
        +setState()
        +build()*
    }

    %% Model Classes
    class UsersRecord {
        +String email
        +String displayName
        +String photoUrl
        +String uid
        +DateTime createdTime
        +String phoneNumber
        +int kessler
        +String shortDescription
        +String role
        +String resultKessler
        +DateTime resultTime
        +List<DateTime> waktuPengukuran
        +String spesialisasi
        +int pengalaman
        +List<String> availableHours
        +bool isDoctorAvailable
        +String deskripsiDokter
        +hasEmail()
        +hasDisplayName()
        +hasPhotoUrl()
        +_initializeFields()
    }

    class SessionsRecord {
        +String sessionId
        +DateTime startTime
        +DateTime endTime
        +String status
        +String notes
        +DateTime createdAt
        +String bookingId
        +String patientId
        +String doctorId
        +String doctorName
        +double reviewRating
        +String reviewNotes
        +hasSessionId()
        +hasStartTime()
        +_initializeFields()
    }

    class BookingRecord {
        +DateTime date
        +String time
        +String notes
        +String status
        +String videoCallUrl
        +DateTime createdAt
        +DateTime updatedAt
        +String doctorName
        +String patientId
        +String doctorId
        +String bookingId
        +String patientName
        +hasDate()
        +hasTime()
        +_initializeFields()
    }

    class KesslerRecord {
        +int hasilKessler
        +DateTime waktuRiwayat
        +String patientId
        +hasHasilKessler()
        +hasWaktuRiwayat()
        +_initializeFields()
    }

    class JurnalRecord {
        +String detail
        +String judul
        +DateTime dateTime
        +String email
        +DateTime createdTime
        +double sliderValue
        +String patientId
        +String jurnalId
        +hasDetail()
        +hasJudul()
        +_initializeFields()
    }

    class ReviewsRecord {
        +int rating
        +String review
        +DateTime createdAt
        +String patientName
        +hasRating()
        +hasReview()
        +_initializeFields()
    }

    %% Widget Classes
    class AgoraVideoCallWidget {
        +String channelName
        +String token
        +createState()
    }

    class _AgoraVideoCallWidgetState {
        -AgoraClient client
        -List<int> users
        -bool muted
        -bool videoOff
        +initState()
        +_initAgoraClient()
        +_checkPermissions()
        +dispose()
        +build()
    }

    class FFAppState {
        -SharedPreferences prefs
        -List<String> recentSearches
        -DocumentReference singleUser
        -List<DocumentReference> multipleUser
        -int equalBreath
        -int boxBreath
        -int four78Breath
        +initializePersistedState()
        +update()
    }

    %% Auth Classes
    class FirebaseAuthManager {
        +handlePhoneAuthStateChanges()
        +handleOAuthStateChanges()
        +signInWithEmail()
        +signInWithGoogle()
        +signOut()
    }

    %% Relationships
    FirestoreRecord <|-- UsersRecord
    FirestoreRecord <|-- SessionsRecord
    FirestoreRecord <|-- BookingRecord
    FirestoreRecord <|-- KesslerRecord
    FirestoreRecord <|-- JurnalRecord
    FirestoreRecord <|-- ReviewsRecord

    StatefulWidget <|-- AgoraVideoCallWidget
    State <|-- _AgoraVideoCallWidgetState
    AgoraVideoCallWidget -- _AgoraVideoCallWidgetState

    %% Associations
    UsersRecord "1" -- "*" SessionsRecord : has
    UsersRecord "1" -- "*" BookingRecord : has
    UsersRecord "1" -- "*" KesslerRecord : has
    UsersRecord "1" -- "*" JurnalRecord : has
    SessionsRecord "1" -- "1" ReviewsRecord : has
    BookingRecord "1" -- "1" SessionsRecord : creates
